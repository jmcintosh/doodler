{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","ts/color_picker.ts","ts/doodler.ts","ts/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","ColorPicker","id","parent","height","this","primary_hsl","secondary_hsl","_canvas","document","createElement","width","style","display","parent_elmt","getElementById","appendChild","_ctx","getContext","oncontextmenu","_primary_preview","_secondary_preview","fillStyle","toString","fillRect","hsl","backgroundColor","as_string","_preview","init_event_listeners","prototype","console","log","addEventListener","pick_color","bind","evt","button","set","offsetX","h","Doodler","_bound_draw","_bound_start_drawing","_bound_stop_drawing","start_draw_listeners","set_line_width","test_circle","beginPath","arc","Math","PI","stroke","start_drawing","stop_drawing","stop_draw_listeners","removeEventListener","lineWidth","bound_draw","draw","push","x","y","offsetY","moveTo","floor","lineTo","_i","_a","clear_canvas","clearRect","save_image","saved_image","toDataURL","load_image","image","Image","src","drawImage","doodler_1","color_picker_1","doodler","clear_btn","save_btn","load_btn"],"mappings":"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","file":"doodler.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class ColorPicker{\r\n    private _canvas: HTMLCanvasElement\r\n    private _ctx: CanvasRenderingContext2D\r\n\r\n    private _preview: HTMLSpanElement\r\n    private _primary_preview: HTMLDivElement\r\n    private _secondary_preview: HTMLDivElement\r\n\r\n    readonly primary_hsl: hsl = null\r\n    readonly secondary_hsl: hsl = null\r\n\r\n    constructor( id: string, parent: string, height: number ){\r\n        this._canvas = document.createElement(\"canvas\")\r\n        this._canvas.id = id\r\n        this._canvas.width = 360\r\n        this._canvas.height = height\r\n        this._canvas.style.display = \"inline\"\r\n        let parent_elmt = document.getElementById(parent)\r\n        parent_elmt.appendChild(this._canvas)\r\n        this._ctx = this._canvas.getContext(\"2d\")\r\n\r\n        // disable the context menu\r\n        this._canvas.oncontextmenu = function(){ return false }\r\n\r\n        this._primary_preview = document.createElement(\"div\")\r\n        this._primary_preview.style.height = height/2 + \"px\"\r\n        this._primary_preview.style.width = height/2 + \"px\"\r\n        this._secondary_preview = document.createElement(\"div\")\r\n        this._secondary_preview.style.height = height/2 + \"px\"\r\n        this._secondary_preview.style.width = height/2 + \"px\"\r\n\r\n        // add color gradient\r\n        for (let i = 0; i < 360; i++) {\r\n            this._ctx.fillStyle = \"hsl(\" + i.toString() + \",100%,50%)\"\r\n            this._ctx.fillRect(i,0,1,height)\r\n        }\r\n\r\n        this.primary_hsl = new hsl(0)\r\n        this.secondary_hsl = new hsl(180)\r\n\r\n        this._primary_preview = document.createElement(\"div\")\r\n        this._primary_preview.style.height = height/2 + \"px\"\r\n        this._primary_preview.style.width = height/2 + \"px\"\r\n        this._primary_preview.style.backgroundColor = this.primary_hsl.as_string()\r\n\r\n\r\n        this._secondary_preview = document.createElement(\"div\")\r\n        this._secondary_preview.style.height = height/2 + \"px\"\r\n        this._secondary_preview.style.width = height/2 + \"px\"\r\n        this._secondary_preview.style.backgroundColor = this.secondary_hsl.as_string()\r\n\r\n        this._preview = document.createElement(\"span\")\r\n\r\n        this._preview.appendChild(this._primary_preview)\r\n        this._preview.appendChild(this._secondary_preview)\r\n\r\n        parent_elmt.appendChild(this._preview)\r\n        parent_elmt.style.display = \"inline\"\r\n\r\n        this.init_event_listeners()\r\n    }\r\n\r\n    init_event_listeners(){\r\n        console.log(\"ColorPicker::init\")\r\n        this._canvas.addEventListener(\"mousedown\",this.pick_color.bind(this))\r\n    }\r\n\r\n    pick_color(evt: MouseEvent){\r\n        console.log(\"ColorPicker::pick_color\",evt)\r\n\r\n        if(evt.button == 0 ){ // set primary_hsl\r\n            this.primary_hsl.set(evt.offsetX)\r\n            this._primary_preview.style.backgroundColor = this.primary_hsl.as_string()\r\n        } else if( evt.button == 2 ){\r\n            this.secondary_hsl.set(evt.offsetX)\r\n            this._secondary_preview.style.backgroundColor = this.secondary_hsl.as_string()\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nclass hsl {\r\n    public h: number\r\n    public s: number\r\n    public l: number\r\n\r\n    constructor( h: number, s = 100, l = 50 ){\r\n        this.set(h,s,l)\r\n    }\r\n\r\n    set( h: number, s = 100, l = 50 ){\r\n        console.log(h)\r\n        this.h = h % 360\r\n\r\n        if ( s < 0 ) { \r\n            this.s = 0\r\n        } else if (s > 100){ \r\n            this.s = 100\r\n        } else{\r\n            this.s = s\r\n        }\r\n\r\n        if ( l < 0 ) { \r\n            this.l = 0\r\n        } else if (l > 100){ \r\n            this.l = 100\r\n        } else{\r\n            this.l = l\r\n        }\r\n    }\r\n\r\n    as_string(){\r\n        return \"hsl(\"+this.h+\", \"+this.s+\"%, \"+this.l+\"%)\"\r\n    }\r\n}","\r\nexport class Doodler {\r\n    private _canvas: HTMLCanvasElement\r\n    private _ctx: CanvasRenderingContext2D\r\n\r\n    private _bound_draw: EventListenerObject[] = []\r\n    private _bound_start_drawing: EventListenerObject = null\r\n    private _bound_stop_drawing: EventListenerObject = null\r\n\r\n    private saved_image: string\r\n\r\n    constructor( id: string, parent: string, width: number, height: number ) {\r\n        this._canvas = document.createElement(\"canvas\")\r\n        this._canvas.id = id\r\n        this._canvas.width = width\r\n        this._canvas.height = height\r\n        document.getElementById(parent).appendChild(this._canvas)\r\n        this._ctx = this._canvas.getContext(\"2d\")\r\n\r\n        // disable the context menu\r\n        this._canvas.oncontextmenu = function(){ return false }\r\n\r\n        this.start_draw_listeners()\r\n        this.set_line_width(1)\r\n    }\r\n\r\n    private test_circle() {\r\n        this._ctx.beginPath()\r\n        this._ctx.arc(95,50,40,0,2*Math.PI)\r\n        this._ctx.stroke()\r\n    } \r\n\r\n    private start_draw_listeners(){\r\n        console.log(\"Doodler:start_draw_listeners\")\r\n        // this._canvas.addEventListener()\r\n\r\n        if (!this._bound_start_drawing) {\r\n            this._bound_start_drawing = this.start_drawing.bind(this)\r\n            this._canvas.addEventListener(\"mousedown\", this._bound_start_drawing, false)\r\n        }\r\n\r\n        if (!this._bound_stop_drawing) {\r\n            this._bound_stop_drawing = this.stop_drawing.bind(this)\r\n            this._canvas.addEventListener(\"mouseup\", this._bound_stop_drawing, false)\r\n        }\r\n    }\r\n\r\n    private stop_draw_listeners(){\r\n        console.log(\"Doodler:stop_draw_listeners\")\r\n        if (this._bound_start_drawing) {\r\n            this._canvas.removeEventListener(\"mousedown\", this._bound_start_drawing, false)\r\n            this._bound_start_drawing = null\r\n        }\r\n        \r\n        if (this._bound_stop_drawing){\r\n            this._canvas.removeEventListener(\"mouseup\", this._bound_stop_drawing, false)\r\n            this._bound_stop_drawing = null\r\n        }\r\n    }\r\n\r\n    private set_line_width(width: number){\r\n        this._ctx.lineWidth = width\r\n    }\r\n\r\n    private start_drawing(evt: MouseEvent){\r\n        // console.group(\"Doodler::start_drawing\")\r\n        // console.log(evt)\r\n        // console.log(evt.offsetX, evt.offsetY)\r\n        // console.groupEnd()\r\n        if(evt.button == 0){\r\n            let bound_draw = this.draw.bind(this)\r\n            this._bound_draw.push(bound_draw)\r\n            this._canvas.addEventListener(\"mousemove\", bound_draw, false)\r\n\r\n            let x = evt.offsetX, y = evt.offsetY\r\n            \r\n            this._ctx.beginPath()\r\n            this._ctx.moveTo(x,y)\r\n            let width = this._ctx.lineWidth\r\n            x = x - Math.floor(width/2)\r\n            y = y - Math.floor(width/2)\r\n            this._ctx.fillRect( x, y, width, width ); // adds a single pixel\r\n        }\r\n    }\r\n\r\n    private draw(evt: MouseEvent){\r\n        // console.group(\"Doodler::draw\")\r\n        // console.log(evt.offsetX, evt.offsetY)\r\n        // console.groupEnd()\r\n        if(evt.button == 0){\r\n            let x = evt.offsetX, y = evt.offsetY\r\n            this._ctx.lineTo(x,y)\r\n            this._ctx.stroke()\r\n        }\r\n\r\n    }\r\n\r\n    private stop_drawing(evt: MouseEvent){\r\n        // console.group(\"Doodler::stop_drawing\")\r\n        // console.log(evt.offsetX, evt.offsetY)\r\n        // console.groupEnd()\r\n        if(evt.button == 0){\r\n            for(let bound_draw of this._bound_draw){\r\n                this._canvas.removeEventListener(\"mousemove\", bound_draw, false)\r\n            }\r\n\r\n            let x = evt.offsetX, y = evt.offsetY\r\n            this._ctx.lineTo(x,y)\r\n            let width = this._ctx.lineWidth\r\n            x = x - Math.floor(width/2)\r\n            y = y - Math.floor(width/2)\r\n            this._ctx.fillRect( x, y, width, width ); // adds a single pixel\r\n            \r\n            this._ctx.stroke()\r\n        }\r\n\r\n    }\r\n\r\n    clear_canvas(){\r\n        console.log(\"Doodler::clear_canvas\")\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height)\r\n        this._ctx.beginPath() // call this just for safety\r\n    }\r\n\r\n    save_image(){\r\n        console.log(\"Doodler::save_canvas_blob\")\r\n        this.saved_image = this._canvas.toDataURL('image/png')\r\n    }\r\n\r\n    load_image(){\r\n        console.log(\"Doodler::load_canvas_blob\")\r\n        let image = new Image()\r\n        image.src = this.saved_image\r\n        this._ctx.drawImage(image,0,0)\r\n    }\r\n\r\n}","import {Doodler} from \"./doodler\"\r\nimport {ColorPicker} from \"./color_picker\"\r\n\r\nlet doodler = new Doodler('doodler-canvas',\"doodler-container\", 800, 600)\r\n\r\nlet color_picker = new ColorPicker('color-picker','color-picker-container', 40)\r\n\r\n// hook up event buttons\r\nlet clear_btn = document.getElementById(\"clear\")\r\nlet save_btn = document.getElementById(\"save\")\r\nlet load_btn = document.getElementById(\"load\")\r\n\r\nclear_btn.addEventListener(\"click\", doodler.clear_canvas.bind(doodler))\r\nsave_btn.addEventListener(\"click\", doodler.save_image.bind(doodler))\r\nload_btn.addEventListener(\"click\", doodler.load_image.bind(doodler))"],"sourceRoot":"/source/"}