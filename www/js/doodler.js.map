{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","ts/color_picker.ts","ts/doodler.ts","ts/hsl.ts","ts/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","hsl_1","ColorPicker","id","parent","width","height","this","primary_hsl","secondary_hsl","_canvas","document","createElement","style","display","parent_elmt","getElementById","appendChild","_ctx","getContext","oncontextmenu","_l_slider","setAttribute","min","max","value","draw_gradient","HSL","_primary_preview","backgroundColor","as_string","position","bottom","_secondary_preview","right","init_event_listeners","prototype","get_primary_hsl","get_secondary_hsl","console","log","addEventListener","pick_color","bind","j","h","normalize_h","normalize_s","fillStyle","fillRect","evt","offsetX","offsetY","Number","button","set","Math","floor","Doodler","color_source","_bound_draw","_bound_start_drawing","_bound_stop_drawing","_draw_end_callbacks","_color_source","classList","add","start_draw_listeners","set_line_width","test_circle","beginPath","arc","PI","stroke","start_drawing","stop_drawing","stop_draw_listeners","removeEventListener","lineWidth","bound_draw","draw","x","y","color","strokeStyle","lw","moveTo","lineTo","on_draw_end","_i","_a","add_draw_end_callback","push","clear_canvas","clearRect","save_image","toDataURL","load_image","img","image","Image","src","drawImage","doodler_1","color_picker_1","color_picker","background","foreground","socket","io","emit","on","debug"],"mappings":"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","file":"doodler.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {HSL} from \"./hsl\"\r\nimport {iColorSource} from \"./iColorSource\"\r\n\r\nexport class ColorPicker implements iColorSource{\r\n    private _canvas: HTMLCanvasElement\r\n    private _ctx: CanvasRenderingContext2D\r\n\r\n    private _l_slider: HTMLInputElement\r\n\r\n    private _primary_preview: HTMLDivElement\r\n    private _secondary_preview: HTMLDivElement\r\n\r\n    private primary_hsl: HSL = null\r\n    private secondary_hsl: HSL = null\r\n\r\n    constructor( id: string, parent: string, width: number, height: number ){\r\n        this._canvas = document.createElement(\"canvas\")\r\n        this._canvas.id = id\r\n        this._canvas.width = width\r\n        this._canvas.height = height\r\n        this._canvas.style.display = \"inline\"\r\n        let parent_elmt = document.getElementById(parent)\r\n        parent_elmt.appendChild(this._canvas)\r\n        this._ctx = this._canvas.getContext(\"2d\")\r\n\r\n        // disable the context menu\r\n        this._canvas.oncontextmenu = function(){ return false }\r\n\r\n        this._l_slider = document.createElement(\"input\")\r\n        this._l_slider.setAttribute(\"type\", \"range\")\r\n        this._l_slider.min = \"0\"\r\n        this._l_slider.max = \"100\"\r\n        this._l_slider.value = \"50\"\r\n\r\n        // add color gradient\r\n        this.draw_gradient()\r\n\r\n        this.primary_hsl = new HSL(0)\r\n        this.secondary_hsl = new HSL(180)\r\n\r\n        this._primary_preview = document.createElement(\"div\")\r\n        this._primary_preview.style.height = height/2 + \"px\"\r\n        this._primary_preview.style.width = height/2 + \"px\"\r\n        this._primary_preview.style.backgroundColor = this.primary_hsl.as_string()\r\n        this._primary_preview.style.display = \"inline-block\"\r\n        this._primary_preview.style.position = \"relative\"\r\n        this._primary_preview.style.bottom = height/2 + \"px\"\r\n\r\n        this._secondary_preview = document.createElement(\"div\")\r\n        this._secondary_preview.style.height = height/2 + \"px\"\r\n        this._secondary_preview.style.width = height/2 + \"px\"\r\n        this._secondary_preview.style.backgroundColor = this.secondary_hsl.as_string()\r\n        this._secondary_preview.style.display = \"inline-block\"\r\n        this._secondary_preview.style.position = \"relative\"\r\n        this._secondary_preview.style.right = height/2 + \"px\"\r\n\r\n\r\n        parent_elmt.appendChild(this._primary_preview)\r\n        parent_elmt.appendChild(this._secondary_preview)\r\n        parent_elmt.appendChild(this._l_slider)\r\n        parent_elmt.style.display = \"inline\"\r\n\r\n\r\n        this.init_event_listeners()\r\n    }\r\n\r\n    get_primary_hsl(){\r\n        return this.primary_hsl\r\n    }\r\n\r\n    get_secondary_hsl(){\r\n        return this.secondary_hsl\r\n    }\r\n\r\n    init_event_listeners(){\r\n        console.log(\"ColorPicker::init\")\r\n        this._canvas.addEventListener(\"mousedown\",this.pick_color.bind(this))\r\n        this._l_slider.addEventListener(\"input\",this.draw_gradient.bind(this))\r\n    }\r\n\r\n    draw_gradient(){\r\n        let width = this._canvas.width\r\n        let height = this._canvas.height\r\n        let l = this._l_slider.value\r\n\r\n        for (let i = 0; i < width; i++) {\r\n            for(let j = 0; j < height; j++){\r\n                let h = this.normalize_h(i)\r\n                let s = this.normalize_s(j)\r\n                this._ctx.fillStyle = \"hsl(\" + h + \",\" + s + \"%,\" + l +\"%)\"\r\n                this._ctx.fillRect(i,j,1,1)\r\n            }\r\n        }\r\n    }\r\n\r\n    pick_color(evt: MouseEvent){\r\n        console.log(\"ColorPicker::pick_color\",evt)\r\n\r\n        let h = this.normalize_h(evt.offsetX)\r\n        let s = this.normalize_s(evt.offsetY)\r\n        let l = Number(this._l_slider.value)\r\n\r\n        if(evt.button == 0 ){ // set primary_hsl\r\n            this.primary_hsl.set(h,s,l)\r\n            this._primary_preview.style.backgroundColor = this.primary_hsl.as_string()\r\n        } else if( evt.button == 2 ){\r\n            this.secondary_hsl.set(h,s,l)\r\n            this._secondary_preview.style.backgroundColor = this.secondary_hsl.as_string()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    normalize_h(h: number){\r\n        return Math.floor(h * 360/this._canvas.width)\r\n    }\r\n\r\n    normalize_s(s: number){\r\n        return Math.floor(100-(s * 100/this._canvas.height))\r\n    }\r\n\r\n}","import {iColorSource} from \"./iColorSource\"\r\n\r\n// import * as lang from \"dojo/_base/lang\"\r\n\r\nexport class Doodler {\r\n    private _canvas: HTMLCanvasElement\r\n    private _ctx: CanvasRenderingContext2D\r\n\r\n    private _bound_draw: EventListenerObject = null\r\n    private _bound_start_drawing: EventListenerObject = null\r\n    private _bound_stop_drawing: EventListenerObject = null\r\n\r\n    private _color_source: iColorSource\r\n\r\n    private _saved_image: string\r\n\r\n    private _draw_end_callbacks: Function[] = []\r\n\r\n    constructor( id: string, parent: string, width: number, height: number, color_source: iColorSource ) {\r\n        \r\n        this._color_source = color_source\r\n\r\n        this._canvas = document.createElement(\"canvas\")\r\n        this._canvas.id = id\r\n        this._canvas.classList.add('doodler-canvas')\r\n        this._canvas.width = width\r\n        this._canvas.height = height\r\n        document.getElementById(parent).appendChild(this._canvas)\r\n        this._ctx = this._canvas.getContext(\"2d\")\r\n\r\n        // disable the context menu\r\n        this._canvas.oncontextmenu = function(){ return false }\r\n\r\n        if(this._color_source){\r\n            this.start_draw_listeners()\r\n            this.set_line_width(4)\r\n        }\r\n\r\n    }\r\n\r\n    private test_circle() {\r\n        this._ctx.beginPath()\r\n        this._ctx.arc(95,50,40,0,2*Math.PI)\r\n        this._ctx.stroke()\r\n    } \r\n\r\n    private start_draw_listeners(){\r\n        console.log(\"Doodler:start_draw_listeners\")\r\n        // this._canvas.addEventListener()\r\n\r\n        if (!this._bound_start_drawing) {\r\n            this._bound_start_drawing = this.start_drawing.bind(this)\r\n            this._canvas.addEventListener(\"mousedown\", this._bound_start_drawing, false)\r\n        }\r\n\r\n        if (!this._bound_stop_drawing) {\r\n            this._bound_stop_drawing = this.stop_drawing.bind(this)\r\n            this._canvas.addEventListener(\"mouseup\", this._bound_stop_drawing, false)\r\n        }\r\n    }\r\n\r\n    private stop_draw_listeners(){\r\n        console.log(\"Doodler:stop_draw_listeners\")\r\n        if (this._bound_start_drawing) {\r\n            this._canvas.removeEventListener(\"mousedown\", this._bound_start_drawing, false)\r\n            this._bound_start_drawing = null\r\n        }\r\n        \r\n        if (this._bound_stop_drawing){\r\n            this._canvas.removeEventListener(\"mouseup\", this._bound_stop_drawing, false)\r\n            this._bound_stop_drawing = null\r\n        }\r\n    }\r\n\r\n    private set_line_width(width: number){\r\n        this._ctx.lineWidth = width\r\n    }\r\n\r\n    private start_drawing(evt: MouseEvent){\r\n        if(evt.button == 0 && this._bound_draw === null){\r\n            let bound_draw = this.draw.bind(this)\r\n            this._bound_draw = bound_draw\r\n            this._canvas.addEventListener(\"mousemove\", bound_draw, false)\r\n\r\n            let x = evt.offsetX, y = evt.offsetY\r\n            let color = this._color_source.get_primary_hsl().as_string()\r\n            this._ctx.strokeStyle = color\r\n            // this._ctx.fillStyle = color\r\n            let lw = this._ctx.lineWidth\r\n            this._ctx.beginPath()\r\n            this._ctx.moveTo(x-lw/4,y)\r\n            this._ctx.lineTo(x+lw/2,y)\r\n            this._ctx.stroke()\r\n        }\r\n    }\r\n\r\n    private draw(evt: MouseEvent){\r\n        if(evt.button == 0){\r\n            let x = evt.offsetX, y = evt.offsetY\r\n            this._ctx.lineTo(x,y)\r\n            this._ctx.stroke()\r\n        }\r\n\r\n    }\r\n\r\n    private stop_drawing(evt: MouseEvent){\r\n        if(evt.button == 0 && this._bound_draw !== null){\r\n            this._canvas.removeEventListener(\"mousemove\", this._bound_draw, false)\r\n            this._bound_draw = null\r\n\r\n            let x = evt.offsetX, y = evt.offsetY\r\n            this._ctx.lineTo(x,y)\r\n            \r\n            this._ctx.stroke()\r\n\r\n            this.on_draw_end()\r\n        }\r\n    }\r\n\r\n    private on_draw_end(){\r\n        console.log(\"Doodler::_on_draw_end\")\r\n\r\n        for( let f of this._draw_end_callbacks){\r\n            f()\r\n        }\r\n    }\r\n\r\n    add_draw_end_callback(f: Function){\r\n        console.log(\"Doodler::_on_draw_end\")\r\n\r\n        this._draw_end_callbacks.push(f)\r\n    }\r\n\r\n    clear_canvas(){\r\n        console.log(\"Doodler::clear_canvas\")\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height)\r\n        this._ctx.beginPath() // call this just for safety\r\n    }\r\n\r\n    save_image(){\r\n        console.log(\"Doodler::save_canvas_blob\")\r\n        return this._canvas.toDataURL('image/png')\r\n    }\r\n\r\n    load_image(img: string){\r\n        console.log(\"Doodler::load_canvas_blob\")\r\n        let image = new Image()\r\n        image.src = img\r\n        this._ctx.drawImage(image,0,0)\r\n    }\r\n\r\n}","export class HSL {\r\n    public h: number\r\n    public s: number\r\n    public l: number\r\n\r\n    constructor( h: number, s = 100, l = 50 ){\r\n        this.set(h,s,l)\r\n    }\r\n\r\n    set( h: number, s = 100, l = 50 ){\r\n        console.log(h)\r\n        this.h = h % 360\r\n\r\n        if ( s < 0 ) { \r\n            this.s = 0\r\n        } else if (s > 100){ \r\n            this.s = 100\r\n        } else{\r\n            this.s = s\r\n        }\r\n\r\n        if ( l < 0 ) { \r\n            this.l = 0\r\n        } else if (l > 100){ \r\n            this.l = 100\r\n        } else{\r\n            this.l = l\r\n        }\r\n    }\r\n\r\n    as_string(){\r\n        return \"hsl(\"+this.h+\", \"+this.s+\"%, \"+this.l+\"%)\"\r\n    }\r\n}","import {Doodler} from \"./doodler\"\r\nimport {ColorPicker} from \"./color_picker\"\r\n\r\nlet color_picker = new ColorPicker('color-picker','color-picker-container', 360, 50)\r\nlet background = new Doodler('background',\"doodler-container\", 800, 600, null)\r\nlet foreground = new Doodler('foreground',\"doodler-container\", 800, 600, color_picker)\r\n\r\nlet socket = io('http://localhost:5150')\r\n\r\n// event emitters\r\nforeground.add_draw_end_callback(function(){\r\n    let img = foreground.save_image()\r\n    socket.emit('image/to_server',img)\r\n    foreground.clear_canvas()\r\n    background.load_image(img)\r\n})\r\n\r\n\r\n// event listeners\r\nsocket.on('image/from_server', function (img) {\r\n    console.debug('image/from_server')\r\n    background.load_image(img)\r\n})"],"sourceRoot":"/source/"}